package com.ftn.sbnz.gcm.rules

import com.ftn.sbnz.gcm.model.models.Trend;
import com.ftn.sbnz.gcm.model.models.GlucoseMeasurement;
import com.ftn.sbnz.gcm.model.enums.TrendType;

global org.kie.api.runtime.Channel trend; // emits Trend
global org.kie.api.runtime.Channel sugg;  // emits Suggestion

global Double stableRate;
global Double fastRate;


declare TrendSignal
    rate : double
    delta : double
end

rule "Build TrendSignal (true 16m sliding window)"
salience 10
when
    $current : GlucoseMeasurement()

    // Find a measurement from approximately 16 minutes ago
    $old : GlucoseMeasurement(
        timestamp <= ($current.timestamp - 14 * 60 * 1000), // At least 15 min ago
        timestamp >= ($current.timestamp - 17 * 60 * 1000)  // But not more than 17 min ago
    )
then
    double minutes = ($current.getTimestamp() - $old.getTimestamp()) / 60000.0;
    double delta = $current.getValue() - $old.getValue();
    double rate = delta / minutes;

    System.out.println("Sliding TrendSignal: rate=" + rate + " delta=" + delta + " over " + minutes + " min");
    System.out.println("  From: " + $old.getValue() + " to " + $current.getValue());

    insertLogical(new TrendSignal(rate, delta));
end

// mutually exclusive classification
rule "UP fast" activation-group "trend-classify"
when
    TrendSignal( rate >= fastRate )
then
    insertLogical(new Trend(TrendType.UP, 2));
end

rule "UP slow" activation-group "trend-classify"
when
    TrendSignal( rate >= stableRate, rate < fastRate )
then
    insertLogical(new Trend(TrendType.UP, 1));
end

rule "STABLE" activation-group "trend-classify"
    when TrendSignal( rate > -stableRate, rate <  stableRate )
then
    insertLogical(new Trend(TrendType.STABLE, 1));
end

rule "DOWN slow" activation-group "trend-classify"
when
    TrendSignal( rate <= -stableRate, rate > -fastRate )
then
    insertLogical(new Trend(TrendType.DOWN, 2));
end

rule "DOWN fast" activation-group "trend-classify"
when
    TrendSignal( rate <= -fastRate )
then
    insertLogical(new Trend(TrendType.DOWN, 1));
end

rule "Trend channel"
when
    $t : Trend()
then
    trend.send($t);
    delete($t); // change later
end