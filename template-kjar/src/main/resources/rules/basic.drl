package com.ftn.sbnz.gcm.rules

import com.ftn.sbnz.gcm.model.models.Trend;
import com.ftn.sbnz.gcm.model.models.GlucoseMeasurement;
import com.ftn.sbnz.gcm.model.enums.TrendType;

global org.kie.api.runtime.Channel trend; // emits Trend
global org.kie.api.runtime.Channel sugg;  // emits Suggestion

global Double stableBandMgPerMin;
global Double fastRateMgPerMin;


declare TrendSignal
    rate : double
    delta : double
end

// compute once
rule "Build TrendSignal (16m window)"
salience 10
when
    Number( intValue >= 2 ) from accumulate( GlucoseMeasurement() over window:time(16m), count(1) )
    $minTs : Number() from accumulate( GlucoseMeasurement( $t: timestamp ) over window:time(16m), min($t) )
    $maxTs : Number() from accumulate( GlucoseMeasurement( $t: timestamp ) over window:time(16m), max($t) )
    $first : GlucoseMeasurement( timestamp == $minTs.longValue(), $v1: value ) over window:time(16m)
    $last  : GlucoseMeasurement( timestamp == $maxTs.longValue(),  $v2: value ) over window:time(16m)
then
    double minutes = ($last.getTimestamp() - $first.getTimestamp()) / 60000.0;
//    if (minutes <= 0) return;
    double rate = ($last.getValue() - $first.getValue()) / minutes;
    double delta = $last.getValue() - $first.getValue();
    System.out.println("TrendSignal: rate=" + rate + " delta=" + delta + " over " + minutes + " min");
    insertLogical(new TrendSignal(rate, delta));
end

// mutually exclusive classification
rule "UP fast" activation-group "trend-classify"
when
    TrendSignal( rate >= fastRateMgPerMin )
then
    insertLogical(new Trend(TrendType.UP, 1));
end

rule "UP slow" activation-group "trend-classify"
when
    TrendSignal( rate >= stableBandMgPerMin, rate < fastRateMgPerMin )
then
    insertLogical(new Trend(TrendType.UP, 2));
end

rule "STABLE" activation-group "trend-classify"
    when TrendSignal( rate > -stableBandMgPerMin, rate <  stableBandMgPerMin )
then
    insertLogical(new Trend(TrendType.STABLE, 1));
end

rule "DOWN slow" activation-group "trend-classify"
when
    TrendSignal( rate <= -stableBandMgPerMin, rate > -fastRateMgPerMin )
then
    insertLogical(new Trend(TrendType.DOWN, 2));
end

rule "DOWN fast" activation-group "trend-classify"
when
    TrendSignal( rate <= -fastRateMgPerMin )
then
    insertLogical(new Trend(TrendType.DOWN, 1));
end

rule "Trend channel"
when
    $t : Trend()
then
    trend.send($t);
    delete($t); // change later
end